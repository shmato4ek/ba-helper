// <auto-generated />
using System;
using BAHelper.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BAHelper.DAL.Migrations
{
    [DbContext(typeof(BAHelperDbContext))]
    [Migration("20230209141626_NotRequiredPropertyProjectAim")]
    partial class NotRequiredPropertyProjectAim
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BAHelper.DAL.Entities.AcceptanceCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserStoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserStoryId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserStoryId");

                    b.HasIndex("UserStoryId1");

                    b.ToTable("AcceptanceCriterias");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectAim")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.Glossary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DocumentId1")
                        .HasColumnType("integer");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("DocumentId1");

                    b.ToTable("Glossaries");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.UserStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<int?>("DocumentId1")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("DocumentId1");

                    b.ToTable("UserStories");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.UserStoryFormula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserStoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserStoryId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserStoryId");

                    b.HasIndex("UserStoryId1");

                    b.ToTable("UserStoryFormulas");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.AcceptanceCriteria", b =>
                {
                    b.HasOne("BAHelper.DAL.Entities.UserStory", null)
                        .WithMany()
                        .HasForeignKey("UserStoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAHelper.DAL.Entities.UserStory", null)
                        .WithMany("AcceptanceCriterias")
                        .HasForeignKey("UserStoryId1");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.Document", b =>
                {
                    b.HasOne("BAHelper.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAHelper.DAL.Entities.User", null)
                        .WithMany("Documents")
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.Glossary", b =>
                {
                    b.HasOne("BAHelper.DAL.Entities.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAHelper.DAL.Entities.Document", null)
                        .WithMany("Glossary")
                        .HasForeignKey("DocumentId1");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.UserStory", b =>
                {
                    b.HasOne("BAHelper.DAL.Entities.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAHelper.DAL.Entities.Document", null)
                        .WithMany("UserStories")
                        .HasForeignKey("DocumentId1");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.UserStoryFormula", b =>
                {
                    b.HasOne("BAHelper.DAL.Entities.UserStory", null)
                        .WithMany()
                        .HasForeignKey("UserStoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BAHelper.DAL.Entities.UserStory", null)
                        .WithMany("Formulas")
                        .HasForeignKey("UserStoryId1");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.Document", b =>
                {
                    b.Navigation("Glossary");

                    b.Navigation("UserStories");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.User", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("BAHelper.DAL.Entities.UserStory", b =>
                {
                    b.Navigation("AcceptanceCriterias");

                    b.Navigation("Formulas");
                });
#pragma warning restore 612, 618
        }
    }
}
